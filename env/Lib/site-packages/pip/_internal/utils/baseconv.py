class BaseConverter:
    def __init__(self, digits):
        self.digits = digits
        self.base = len(digits)
    
    def encode(self, number):
        if number == 0:
            return self.digits[0]
        result = []
        while number:
            number, rem = divmod(number, self.base)
            result.append(self.digits[rem])
        return ''.join(reversed(result))
    
    def decode(self, string):
        number = 0
        for char in string:
            number = number * self.base + self.digits.index(char)
        return number

# Example usage
base36 = BaseConverter('0123456789abcdefghijklmnopqrstuvwxyz')

encoded_value = base36.encode(12345)
decoded_value = base36.decode(encoded_value)

print(f"Encoded: {encoded_value}, Decoded: {decoded_value}")
